<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ice.dao.EstimateDao">
	<insert id="estimateInsertAction" parameterType="map">
		insert into estimate
	    	(
	    	estimateTitle,
	    	contactNo,
	    	name,
	    	price_kr,
	    	validity,
	    	deliveryDate,
	    	deliveryPlace,
	    	paymentType,
	    	constructionDate,
	    	contentList,
	    	title,
	    	regDate,
	    	regNm
	    	)
    	values
    		(
    		#{estimateTitle},
    		#{contactNo},
    		#{name},
    		#{price_kr},
    		#{validity},
    		#{deliveryDate},
    		#{deliveryPlace},
    		#{paymentType},
    		#{constructionDate},
    		#{contents},
    		#{title},
    		now(),
    		'관리자'
    		)
	</insert>
	<select id="getEstimateListByNum" parameterType="map" resultType="hashmap">
		select
			no,
			estimateTitle,
			constructionDate
		from
			estimate
		where
			delyn = 'n'
			and contactNo = #{contactNo}
			and constructionDate = #{constructionDate}
	</select>
	
	<select id="getDetailByNum" parameterType="map" resultType="hashmap">
		select
			no,
			estimateTitle,
			name,
			price_kr,
			validity,
			deliveryDate,
			deliveryPlace,
			paymentType,
			constructionDate,
			contentList, 
			title,
			total,
			regDate
		from
			estimate 
		where
			delyn = 'n'
			and no = #{no}
	</select>
	
	<select id="estimateList" parameterType="map" resultType="hashmap">
		select
			contactNo,
			name,
			constructionDate
		from
			estimate
		where
			delyn = 'n'
			<if test="sDm != null and eDm != null and sDm != '' and eDm != ''">
				 and constructionDate between #{sDm} and #{eDm}
			</if>
			<if test="search == 'contactNo'">
				and contactNo  =  #{searchKeyword}
			</if>
			<if test="search == 'name'">
				and name like CONCAT('%',#{searchKeyword},'%')
			</if>
		group by contactNo,constructionDate
		limit
			#{fst},#{lst}
	</select>
	
	<select id="estimateListCnt" parameterType="map" resultType="int">
	select 
		count(*) 
	from 
		(
		select
			no
		from
			estimate
		where
			delyn = 'n'
			<if test="sDm != null and eDm != null and sDm != '' and eDm != ''">
				 and constructionDate between #{sDm} and #{eDm}
			</if>
			<if test="search == 'contactNo'">
				and contactNo  =  #{searchKeyword}
			</if>
			<if test="search == 'name'">
				and name like CONCAT('%',#{searchKeyword},'%')
			</if>
		group by contactNo,constructionDate
		)tb
	</select>
	
	<update id="estimateDelete" parameterType="map">
		update
			estimate
		set
			delyn='y'
		where
			no = #{no}
	</update>
</mapper>